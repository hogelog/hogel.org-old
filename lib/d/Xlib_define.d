/* 

Copyright 1985, 1986, 1987, 1991, 1998  The Open Group

Permission to use, copy, modify, distribute, and sell this software and its
documentation for any purpose is hereby granted without fee, provided that
the above copyright notice appear in all copies and that both that
copyright notice and this permission notice appear in supporting
documentation.

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Except as contained in this notice, the name of The Open Group shall not be
used in advertising or otherwise to promote the sale, use or other dealings
in this Software without prior written authorization from The Open Group.

*/

extern(C):
const None = 0;
const ParentRelative = 1;
const CopyFromParent = 0;
const PointerWindow = 0;
const InputFocus = 1;
const PointerRoot = 1;
const AnyPropertyType = 0;
const AnyKey = 0;
const AnyButton = 0;
const AllTemporary = 0;
const CurrentTime = 0;
const NoSymbol = 0;
const NoEventMask = 0;
const KeyPressMask = (1<<0);
const KeyReleaseMask = (1<<1);
const ButtonPressMask = (1<<2);
const ButtonReleaseMask = (1<<3);
const EnterWindowMask = (1<<4);
const LeaveWindowMask = (1<<5);
const PointerMotionMask = (1<<6);
const PointerMotionHintMask = (1<<7);
const Button1MotionMask = (1<<8);
const Button2MotionMask = (1<<9);
const Button3MotionMask = (1<<10);
const Button4MotionMask = (1<<11);
const Button5MotionMask = (1<<12);
const ButtonMotionMask = (1<<13);
const KeymapStateMask = (1<<14);
const ExposureMask = (1<<15);
const VisibilityChangeMask = (1<<16);
const StructureNotifyMask = (1<<17);
const ResizeRedirectMask = (1<<18);
const SubstructureNotifyMask = (1<<19);
const SubstructureRedirectMask = (1<<20);
const FocusChangeMask = (1<<21);
const PropertyChangeMask = (1<<22);
const ColormapChangeMask = (1<<23);
const OwnerGrabButtonMask = (1<<24);
const KeyPress = 2;
const KeyRelease = 3;
const ButtonPress = 4;
const ButtonRelease = 5;
const MotionNotify = 6;
const EnterNotify = 7;
const LeaveNotify = 8;
const FocusIn = 9;
const FocusOut = 10;
const KeymapNotify = 11;
const Expose = 12;
const GraphicsExpose = 13;
const NoExpose = 14;
const VisibilityNotify = 15;
const CreateNotify = 16;
const DestroyNotify = 17;
const UnmapNotify = 18;
const MapNotify = 19;
const MapRequest = 20;
const ReparentNotify = 21;
const ConfigureNotify = 22;
const ConfigureRequest = 23;
const GravityNotify = 24;
const ResizeRequest = 25;
const CirculateNotify = 26;
const CirculateRequest = 27;
const PropertyNotify = 28;
const SelectionClear = 29;
const SelectionRequest = 30;
const SelectionNotify = 31;
const ColormapNotify = 32;
const ClientMessage = 33;
const MappingNotify = 34;
const LASTEvent = 35;
const ShiftMask = (1<<0);
const LockMask = (1<<1);
const ControlMask = (1<<2);
const Mod1Mask = (1<<3);
const Mod2Mask = (1<<4);
const Mod3Mask = (1<<5);
const Mod4Mask = (1<<6);
const Mod5Mask = (1<<7);
const ShiftMapIndex = 0;
const LockMapIndex = 1;
const ControlMapIndex = 2;
const Mod1MapIndex = 3;
const Mod2MapIndex = 4;
const Mod3MapIndex = 5;
const Mod4MapIndex = 6;
const Mod5MapIndex = 7;
const Button1Mask = (1<<8);
const Button2Mask = (1<<9);
const Button3Mask = (1<<10);
const Button4Mask = (1<<11);
const Button5Mask = (1<<12);
const AnyModifier = (1<<15);
const Button1 = 1;
const Button2 = 2;
const Button3 = 3;
const Button4 = 4;
const Button5 = 5;
const NotifyNormal = 0;
const NotifyGrab = 1;
const NotifyUngrab = 2;
const NotifyWhileGrabbed = 3;
const NotifyHint = 1;
const NotifyAncestor = 0;
const NotifyVirtual = 1;
const NotifyInferior = 2;
const NotifyNonlinear = 3;
const NotifyNonlinearVirtual = 4;
const NotifyPointer = 5;
const NotifyPointerRoot = 6;
const NotifyDetailNone = 7;
const VisibilityUnobscured = 0;
const VisibilityPartiallyObscured = 1;
const VisibilityFullyObscured = 2;
const PlaceOnTop = 0;
const PlaceOnBottom = 1;
const FamilyInternet = 0;
const FamilyDECnet = 1;
const FamilyChaos = 2;
const FamilyInternet6 = 6;
const FamilyServerInterpreted = 5;
const PropertyNewValue = 0;
const PropertyDelete = 1;
const ColormapUninstalled = 0;
const ColormapInstalled = 1;
const GrabModeSync = 0;
const GrabModeAsync = 1;
const GrabSuccess = 0;
const AlreadyGrabbed = 1;
const GrabInvalidTime = 2;
const GrabNotViewable = 3;
const GrabFrozen = 4;
const AsyncPointer = 0;
const SyncPointer = 1;
const ReplayPointer = 2;
const AsyncKeyboard = 3;
const SyncKeyboard = 4;
const ReplayKeyboard = 5;
const AsyncBoth = 6;
const SyncBoth = 7;
const RevertToNone = cast(int)None;
const RevertToPointerRoot = cast(int)PointerRoot;
const RevertToParent = 2;
const Success = 0;
const BadRequest = 1;
const BadValue = 2;
const BadWindow = 3;
const BadPixmap = 4;
const BadAtom = 5;
const BadCursor = 6;
const BadFont = 7;
const BadMatch = 8;
const BadDrawable = 9;
const BadAccess = 10;
const BadAlloc = 11;
const BadColor = 12;
const BadGC = 13;
const BadIDChoice = 14;
const BadName = 15;
const BadLength = 16;
const BadImplementation = 17;
const FirstExtensionError = 128;
const LastExtensionError = 255;
const InputOutput = 1;
const InputOnly = 2;
const CWBackPixmap = (1<<0);
const CWBackPixel = (1<<1);
const CWBorderPixmap = (1<<2);
const CWBorderPixel = (1<<3);
const CWBitGravity = (1<<4);
const CWWinGravity = (1<<5);
const CWBackingStore = (1<<6);
const CWBackingPlanes = (1<<7);
const CWBackingPixel = (1<<8);
const CWOverrideRedirect = (1<<9);
const CWSaveUnder = (1<<10);
const CWEventMask = (1<<11);
const CWDontPropagate = (1<<12);
const CWColormap = (1<<13);
const CWCursor = (1<<14);
const CWX = (1<<0);
const CWY = (1<<1);
const CWWidth = (1<<2);
const CWHeight = (1<<3);
const CWBorderWidth = (1<<4);
const CWSibling = (1<<5);
const CWStackMode = (1<<6);
const ForgetGravity = 0;
const NorthWestGravity = 1;
const NorthGravity = 2;
const NorthEastGravity = 3;
const WestGravity = 4;
const CenterGravity = 5;
const EastGravity = 6;
const SouthWestGravity = 7;
const SouthGravity = 8;
const SouthEastGravity = 9;
const StaticGravity = 10;
const UnmapGravity = 0;
const NotUseful = 0;
const WhenMapped = 1;
const Always = 2;
const IsUnmapped = 0;
const IsUnviewable = 1;
const IsViewable = 2;
const SetModeInsert = 0;
const SetModeDelete = 1;
const DestroyAll = 0;
const RetainPermanent = 1;
const RetainTemporary = 2;
const Above = 0;
const Below = 1;
const TopIf = 2;
const BottomIf = 3;
const Opposite = 4;
const RaiseLowest = 0;
const LowerHighest = 1;
const PropModeReplace = 0;
const PropModePrepend = 1;
const PropModeAppend = 2;
const GXclear = 0x0;
const GXand = 0x1;
const GXandReverse = 0x2;
const GXcopy = 0x3;
const GXandInverted = 0x4;
const GXnoop = 0x5;
const GXxor = 0x6;
const GXor = 0x7;
const GXnor = 0x8;
const GXequiv = 0x9;
const GXinvert = 0xa;
const GXorReverse = 0xb;
const GXcopyInverted = 0xc;
const GXorInverted = 0xd;
const GXnand = 0xe;
const GXset = 0xf;
const LineSolid = 0;
const LineOnOffDash = 1;
const LineDoubleDash = 2;
const CapNotLast = 0;
const CapButt = 1;
const CapRound = 2;
const CapProjecting = 3;
const JoinMiter = 0;
const JoinRound = 1;
const JoinBevel = 2;
const FillSolid = 0;
const FillTiled = 1;
const FillStippled = 2;
const FillOpaqueStippled = 3;
const EvenOddRule = 0;
const WindingRule = 1;
const ClipByChildren = 0;
const IncludeInferiors = 1;
const Unsorted = 0;
const YSorted = 1;
const YXSorted = 2;
const YXBanded = 3;
const CoordModeOrigin = 0;
const CoordModePrevious = 1;
const Complex = 0;
const Nonconvex = 1;
const Convex = 2;
const ArcChord = 0;
const ArcPieSlice = 1;
const GCFunction = (1<<0);
const GCPlaneMask = (1<<1);
const GCForeground = (1<<2);
const GCBackground = (1<<3);
const GCLineWidth = (1<<4);
const GCLineStyle = (1<<5);
const GCCapStyle = (1<<6);
const GCJoinStyle = (1<<7);
const GCFillStyle = (1<<8);
const GCFillRule = (1<<9);
const GCTile = (1<<10);
const GCStipple = (1<<11);
const GCTileStipXOrigin = (1<<12);
const GCTileStipYOrigin = (1<<13);
const GCFont = (1<<14);
const GCSubwindowMode = (1<<15);
const GCGraphicsExposures = (1<<16);
const GCClipXOrigin = (1<<17);
const GCClipYOrigin = (1<<18);
const GCClipMask = (1<<19);
const GCDashOffset = (1<<20);
const GCDashList = (1<<21);
const GCArcMode = (1<<22);
const GCLastBit = 22;
const FontLeftToRight = 0;
const FontRightToLeft = 1;
const FontChange = 255;
const XYBitmap = 0;
const XYPixmap = 1;
const ZPixmap = 2;
const AllocNone = 0;
const AllocAll = 1;
const DoRed = (1<<0);
const DoGreen = (1<<1);
const DoBlue = (1<<2);
const CursorShape = 0;
const TileShape = 1;
const StippleShape = 2;
const AutoRepeatModeOff = 0;
const AutoRepeatModeOn = 1;
const AutoRepeatModeDefault = 2;
const LedModeOff = 0;
const LedModeOn = 1;
const KBKeyClickPercent = (1<<0);
const KBBellPercent = (1<<1);
const KBBellPitch = (1<<2);
const KBBellDuration = (1<<3);
const KBLed = (1<<4);
const KBLedMode = (1<<5);
const KBKey = (1<<6);
const KBAutoRepeatMode = (1<<7);
const MappingSuccess = 0;
const MappingBusy = 1;
const MappingFailed = 2;
const MappingModifier = 0;
const MappingKeyboard = 1;
const MappingPointer = 2;
const DontPreferBlanking = 0;
const PreferBlanking = 1;
const DefaultBlanking = 2;
const DisableScreenSaver = 0;
const DisableScreenInterval = 0;
const DontAllowExposures = 0;
const AllowExposures = 1;
const DefaultExposures = 2;
const ScreenSaverReset = 0;
const ScreenSaverActive = 1;
const HostInsert = 0;
const HostDelete = 1;
const EnableAccess = 1;
const DisableAccess = 0;
const StaticGray = 0;
const GrayScale = 1;
const StaticColor = 2;
const PseudoColor = 3;
const TrueColor = 4;
const DirectColor = 5;
const LSBFirst = 0;
const MSBFirst = 1;
const NeedFunctionPrototypes = 1;
const NeedVarargsPrototypes = 1;
const NeedNestedPrototypes = 1;
const NeedWidePrototypes = 1;
const X_HAVE_UTF8_STRING = 1;
const True = 1;
const False = 0;
const QueuedAlready = 0;
const QueuedAfterReading = 1;
const QueuedAfterFlush = 2;
const AllPlanes = (cast(uint)~0);
const XNRequiredCharSet = "requiredCharSet";
const XNQueryOrientation = "queryOrientation";
const XNBaseFontName = "baseFontName";
const XNOMAutomatic = "omAutomatic";
const XNMissingCharSet = "missingCharSet";
const XNDefaultString = "defaultString";
const XNOrientation = "orientation";
const XNDirectionalDependentDrawing = "directionalDependentDrawing";
const XNContextualDrawing = "contextualDrawing";
const XNFontInfo = "fontInfo";
const XIMPreeditArea = 0x0001;
const XIMPreeditCallbacks = 0x0002;
const XIMPreeditPosition = 0x0004;
const XIMPreeditNothing = 0x0008;
const XIMPreeditNone = 0x0010;
const XIMStatusArea = 0x0100;
const XIMStatusCallbacks = 0x0200;
const XIMStatusNothing = 0x0400;
const XIMStatusNone = 0x0800;
const XNVaNestedList = "XNVaNestedList";
const XNQueryInputStyle = "queryInputStyle";
const XNClientWindow = "clientWindow";
const XNInputStyle = "inputStyle";
const XNFocusWindow = "focusWindow";
const XNResourceName = "resourceName";
const XNResourceClass = "resourceClass";
const XNGeometryCallback = "geometryCallback";
const XNDestroyCallback = "destroyCallback";
const XNFilterEvents = "filterEvents";
const XNPreeditStartCallback = "preeditStartCallback";
const XNPreeditDoneCallback = "preeditDoneCallback";
const XNPreeditDrawCallback = "preeditDrawCallback";
const XNPreeditCaretCallback = "preeditCaretCallback";
const XNPreeditStateNotifyCallback = "preeditStateNotifyCallback";
const XNPreeditAttributes = "preeditAttributes";
const XNStatusStartCallback = "statusStartCallback";
const XNStatusDoneCallback = "statusDoneCallback";
const XNStatusDrawCallback = "statusDrawCallback";
const XNStatusAttributes = "statusAttributes";
const XNArea = "area";
const XNAreaNeeded = "areaNeeded";
const XNSpotLocation = "spotLocation";
const XNColormap = "colorMap";
const XNStdColormap = "stdColorMap";
const XNForeground = "foreground";
const XNBackground = "background";
const XNBackgroundPixmap = "backgroundPixmap";
const XNFontSet = "fontSet";
const XNLineSpace = "lineSpace";
const XNCursor = "cursor";
const XNQueryIMValuesList = "queryIMValuesList";
const XNQueryICValuesList = "queryICValuesList";
const XNVisiblePosition = "visiblePosition";
const XNR6PreeditCallback = "r6PreeditCallback";
const XNStringConversionCallback = "stringConversionCallback";
const XNStringConversion = "stringConversion";
const XNResetState = "resetState";
const XNHotKey = "hotKey";
const XNHotKeyState = "hotKeyState";
const XNPreeditState = "preeditState";
const XNSeparatorofNestedList = "separatorofNestedList";
const XBufferOverflow = -1;
const XLookupNone = 1;
const XLookupChars = 2;
const XLookupKeySym = 3;
const XLookupBoth = 4;
const XIMReverse = 1;
const XIMUnderline = (1<<1);
const XIMHighlight = (1<<2);
const XIMPrimary = (1<<5);
const XIMSecondary = (1<<6);
const XIMTertiary = (1<<7);
const XIMVisibleToForward = (1<<8);
const XIMVisibleToBackword = (1<<9);
const XIMVisibleToCenter = (1<<10);
const XIMPreeditUnKnown = 0;
const XIMPreeditEnable = 1;
const XIMPreeditDisable = (1<<1);
const XIMInitialState = 1;
const XIMPreserveState = (1<<1);
const XIMStringConversionLeftEdge = (0x00000001);
const XIMStringConversionRightEdge = (0x00000002);
const XIMStringConversionTopEdge = (0x00000004);
const XIMStringConversionBottomEdge = (0x00000008);
const XIMStringConversionConcealed = (0x00000010);
const XIMStringConversionWrapped = (0x00000020);
const XIMStringConversionBuffer = (0x0001);
const XIMStringConversionLine = (0x0002);
const XIMStringConversionWord = (0x0003);
const XIMStringConversionChar = (0x0004);
const XIMStringConversionSubstitution = (0x0001);
const XIMStringConversionRetrieval = (0x0002);
const XIMHotKeyStateON = (0x0001);
const XIMHotKeyStateOFF = (0x0002);
